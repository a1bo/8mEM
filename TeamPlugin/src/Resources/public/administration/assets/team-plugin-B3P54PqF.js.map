{"version":3,"file":"team-plugin-B3P54PqF.js","sources":["../../../app/administration/src/module/team-employee/page/team-employee-list/team-employee-list.html.twig","../../../app/administration/src/module/team-employee/page/team-employee-list/index.js","../../../app/administration/src/module/team-employee/page/team-employee-detail/team-employee-detail.html.twig","../../../app/administration/src/module/team-employee/page/team-employee-detail/index.js","../../../app/administration/src/module/team-employee/component/team-employee-media-form/team-employee-media-form.html.twig","../../../app/administration/src/module/team-employee/component/team-employee-media-form/index.js","../../../app/administration/src/module/team-employee/index.js"],"sourcesContent":["{% raw %}<sw-page>\r\n    <template #smart-bar-header>\r\n        <h2>{{ $t('team-employee.general.mainMenuItemGeneral') }} <span v-if=\"!isLoading\">({{ total }})</span></h2>\r\n    </template>\r\n\r\n    <template #smart-bar-actions>\r\n        <sw-button variant=\"primary\" :routerLink=\"{ name: 'team.employee.create' }\">\r\n            {{ $t('team-employee.list.createEmployee') }}\r\n        </sw-button>\r\n    </template>\r\n\r\n    <template #content>\r\n        <sw-entity-listing\r\n            v-if=\"employees\"\r\n            :items=\"employees\"\r\n            :repository=\"repository\"\r\n            :showSelection=\"true\"\r\n            :columns=\"columns\"\r\n            :isLoading=\"isLoading\"\r\n            detailRoute=\"team.employee.detail\">\r\n\r\n            <template #column-name=\"{ item }\">\r\n                <router-link :to=\"{ name: 'team.employee.detail', params: { id: item.id } }\">\r\n                    <sw-media-preview-v2 :source=\"item.personImage\"></sw-media-preview-v2>\r\n                    {{ item.name }}\r\n                </router-link>\r\n            </template>\r\n\r\n            <template #actions=\"{ item }\">\r\n                <sw-button variant=\"danger\" size=\"small\" @click=\"onDeleteEmployee(item)\">\r\n                    {{ $t('team-employee.list.deleteEmployee') }}\r\n                </sw-button>\r\n            </template>\r\n\r\n        </sw-entity-listing>\r\n    </template>\r\n    <sw-confirm-modal\r\n        ref=\"confirmDeleteModal\"\r\n        :title=\"$t('team-employee.list.deleteEmployee')\"\r\n        :text=\"employeeToDelete ? employeeToDelete.position : ''\"\r\n        @confirm=\"onConfirmDelete\"\r\n        @cancel=\"onCancelDelete\"/>\r\n</sw-page>{% endraw %}\r\n","import template from './team-employee-list.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('team-plugin-employee-list', {\r\n    template,\r\n\r\n    mixins: [\r\n        Mixin.get('listing')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            employees: [],\r\n            repository: null,\r\n            isLoading: false,\r\n            employeeToDelete: null,\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$t('team-employee.general.mainMenuItemGeneral')\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        columns() {\r\n            return [{\r\n                property: 'position',\r\n                label: this.$t('team-employee.list.columnPosition'),\r\n                routerLink: 'team.employee.detail',\r\n                inlineEdit: 'string',\r\n                allowResize: true,\r\n                primary: true\r\n            }];\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.repository = this.repositoryFactory.create('team_employee');\r\n        this.getList();\r\n    },\r\n\r\n    methods: {\r\n        getList() {\r\n            this.isLoading = true;\r\n            const criteria = new Criteria(this.page, this.limit);\r\n            criteria.addAssociation('personImage');\r\n\r\n            this.repository\r\n                .search(criteria, Shopware.Context.api)\r\n                .then((result) => {\r\n                    this.employees = result;\r\n                    this.total = result.total;\r\n                    this.isLoading = false;\r\n                });\r\n        },\r\n        onDeleteEmployee(employee) {\r\n            this.employeeToDelete = employee;\r\n            this.$refs.confirmDeleteModal.open();\r\n        },\r\n\r\n        onConfirmDelete() {\r\n            if (!this.employeeToDelete) {\r\n                return;\r\n            }\r\n\r\n            this.isLoading = true;\r\n            this.repository.delete(this.employeeToDelete.id, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.getList();\r\n                })\r\n                .finally(() => {\r\n                    this.isLoading = false;\r\n                    this.employeeToDelete = null;\r\n                });\r\n        },\r\n\r\n        onCancelDelete() {\r\n            this.employeeToDelete = null;\r\n        }\r\n    }\r\n});\r\n","{% raw %}<sw-page>\r\n    <template #smart-bar-header>\r\n        <h2>{{ $t('team-employee.general.mainMenuItemGeneral') }} &raquo; {{ employee.position }}</h2>\r\n    </template>\r\n\r\n    <template #smart-bar-actions>\r\n        <sw-button-process\r\n            :isLoading=\"isLoading\"\r\n            :processSuccess=\"isSaveSuccessful\"\r\n            variant=\"primary\"\r\n            @process-finish=\"saveFinish\"\r\n            @click=\"onSave\">\r\n            {{ $t('team-employee.detail.save') }}\r\n        </sw-button-process>\r\n    </template>\r\n\r\n    <template #content>\r\n        <sw-card-view>\r\n            <sw-card :title=\"$t('team-employee.detail.general')\">\r\n                <sw-field type=\"text\" :label=\"$t('team-employee.detail.position')\" v-model=\"employee.position\"></sw-field>\r\n                <sw-text-editor :label=\"$t('team-employee.detail.text')\" v-model=\"employee.text\"></sw-text-editor>\r\n            </sw-card>\r\n            <sw-card :title=\"$t('team-employee.detail.images')\">\r\n                <sw-media-upload-v2\r\n                    :uploadTag=\"employee.id\"\r\n                    :source=\"employee.personImage\"\r\n                    :label=\"$t('team-employee.detail.personImage')\"\r\n                    @media-upload-remove-image=\"onRemovePersonImage\"\r\n                    @media-upload-sidebar-open=\"onOpenPersonImage\"\r\n                    @media-upload-successful=\"onPersonImageUpload\"\r\n                ></sw-media-upload-v2>\r\n                <sw-media-upload-v2\r\n                    :uploadTag=\"employee.id\"\r\n                    :source=\"employee.backgroundImage\"\r\n                    :label=\"$t('team-employee.detail.backgroundImage')\"\r\n                    @media-upload-remove-image=\"onRemoveBackgroundImage\"\r\n                    @media-upload-sidebar-open=\"onOpenBackgroundImage\"\r\n                    @media-upload-successful=\"onBackgroundImageUpload\"\r\n                ></sw-media-upload-v2>\r\n            </sw-card>\r\n        </sw-card-view>\r\n    </template>\r\n</sw-page>{% endraw %}\r\n","import template from './team-employee-detail.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('team-plugin-employee-detail', {\r\n    template,\r\n\r\n    mixins: [\r\n        Mixin.get('notification'),\r\n        Mixin.get('placeholder')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            employee: null,\r\n            isLoading: false,\r\n            isSaveSuccessful: false,\r\n            repository: null,\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$t('team-employee.general.mainMenuItemGeneral')\r\n        };\r\n    },\r\n\r\n    created() {\r\n        this.repository = this.repositoryFactory.create('team_employee');\r\n        this.getEmployee();\r\n    },\r\n\r\n    methods: {\r\n        getEmployee() {\r\n            this.isLoading = true;\r\n            const criteria = new Criteria();\r\n            criteria.addAssociation('personImage');\r\n            criteria.addAssociation('backgroundImage');\r\n\r\n            if (this.$route.params.id) {\r\n                this.repository\r\n                    .get(this.$route.params.id, Shopware.Context.api, criteria)\r\n                    .then((employee) => {\r\n                        this.employee = employee;\r\n                        this.isLoading = false;\r\n                    });\r\n            } else {\r\n                // Using create instead of createNew\r\n                this.repository.create(Shopware.Context.api).then(employee => {\r\n                    this.employee = employee;\r\n                    this.isLoading = false;\r\n                });\r\n            }\r\n        },\r\n\r\n        onSave() {\r\n            this.isLoading = true;\r\n            this.repository\r\n                .save(this.employee, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.getEmployee();\r\n                    this.isSaveSuccessful = true;\r\n                }).catch((exception) => {\r\n                this.isLoading = false;\r\n                this.createNotificationError({\r\n                    title: this.$t('team-employee.detail.errorTitle'),\r\n                    message: exception.message\r\n                });\r\n            });\r\n        },\r\n\r\n        saveFinish() {\r\n            this.isSaveSuccessful = false;\r\n        },\r\n\r\n        onPersonImageUpload({ targetId }) {\r\n            this.employee.personImageId = targetId;\r\n        },\r\n\r\n        onRemovePersonImage() {\r\n            this.employee.personImageId = null;\r\n        },\r\n\r\n        onOpenPersonImage() {\r\n            // Implement media modal opening if needed\r\n        },\r\n\r\n        onBackgroundImageUpload({ targetId }) {\r\n            this.employee.backgroundImageId = targetId;\r\n        },\r\n\r\n        onRemoveBackgroundImage() {\r\n            this.employee.backgroundImageId = null;\r\n        },\r\n\r\n        onOpenBackgroundImage() {\r\n            // Implement media modal opening if needed\r\n        },\r\n    }\r\n});\r\n","{% block team_employee_media_form %}\r\n    <sw-container>\r\n        <sw-media-upload-v2\r\n            variant=\"regular\"\r\n            :uploadTag=\"mediaId\"\r\n            :source=\"mediaItem\"\r\n            :allowMultiSelect=\"false\"\r\n            :isLoading=\"isLoading\"\r\n            @media-upload=\"onImageUpload\"\r\n            @media-remove=\"onRemoveImage\"\r\n        ></sw-media-upload-v2>\r\n    </sw-container>\r\n{% endblock %}\r\n","import template from './team-employee-media-form.html.twig';\r\n\r\nconst { Component } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('team-employee-media-form', {\r\n    template,\r\n\r\n    props: {\r\n        mediaId: {\r\n            type: String,\r\n            required: false,\r\n            default: null\r\n        },\r\n        mediaItem: {\r\n            type: Object,\r\n            required: false,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            mediaRepository: null,\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        hasMedia() {\r\n            return this.mediaItem !== null;\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.mediaRepository = this.repositoryFactory.create('media');\r\n    },\r\n\r\n    methods: {\r\n        onImageUpload({ targetId }) {\r\n            this.isLoading = true;\r\n            this.mediaRepository.get(targetId, Shopware.Context.api)\r\n                .then((media) => {\r\n                    this.$emit('media-upload', media);\r\n                    this.isLoading = false;\r\n                }).catch(() => {\r\n                this.isLoading = false;\r\n            });\r\n        },\r\n\r\n        onRemoveImage() {\r\n            this.$emit('media-remove');\r\n        },\r\n\r\n        onOpenMediaModal() {\r\n            this.$emit('media-open');\r\n        }\r\n    }\r\n});\r\n","import './page/team-employee-list';\r\nimport './page/team-employee-detail';\r\nimport './component/team-employee-media-form';\r\n\r\nimport enGB from './snippet/en-GB.json';\r\nimport deDE from './snippet/de-DE.json';\r\n\r\nconst { Module } = Shopware;\r\n\r\nModule.register('team-employee', {\r\n    type: 'plugin',\r\n    name: 'team-employee',\r\n    title: 'team-employee.general.mainMenuItemGeneral',\r\n    description: 'team-employee.general.description',\r\n    color: '#ff3e6d',\r\n    icon: 'default-action-settings',\r\n\r\n    snippets: {\r\n        'en-GB': enGB,\r\n        'de-DE': deDE\r\n    },\r\n\r\n    routes: {\r\n        list: {\r\n            component: 'team-plugin-employee-list',\r\n            path: 'list'\r\n        },\r\n        detail: {\r\n            component: 'team-plugin-employee-detail',\r\n            path: 'detail/:id',\r\n            meta: {\r\n                parentPath: 'team.employee.list'\r\n            }\r\n        },\r\n        create: {\r\n            component: 'team-plugin-employee-detail',\r\n            path: 'create',\r\n            meta: {\r\n                parentPath: 'team.employee.list'\r\n            }\r\n        },\r\n    },\r\n\r\n    navigation: [{\r\n        label: 'team-employee.general.mainMenuItemGeneral',\r\n        color: '#ff3e6d',\r\n        path: 'team.employee.list',\r\n        icon: 'default-action-settings',\r\n        position: 100,\r\n        parent: 'sw-content',\r\n    }]\r\n});\r\n"],"names":["template$2","Component","Mixin","Criteria","template","criteria","result","employee","template$1","exception","targetId","media","Module","enGB","deDE"],"mappings":"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"}