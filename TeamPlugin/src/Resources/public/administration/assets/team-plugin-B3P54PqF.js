const o=`{% raw %}<sw-page> <template #smart-bar-header> <h2>{{ $t('team-employee.general.mainMenuItemGeneral') }} <span v-if="!isLoading">({{ total }})</span></h2> </template> <template #smart-bar-actions> <sw-button variant="primary" :routerLink="{ name: 'team.employee.create' }"> {{ $t('team-employee.list.createEmployee') }} </sw-button> </template> <template #content> <sw-entity-listing v-if="employees" :items="employees" :repository="repository" :showSelection="true" :columns="columns" :isLoading="isLoading" detailRoute="team.employee.detail"> <template #column-name="{ item }"> <router-link :to="{ name: 'team.employee.detail', params: { id: item.id } }"> <sw-media-preview-v2 :source="item.personImage"></sw-media-preview-v2> {{ item.name }} </router-link> </template> <template #actions="{ item }"> <sw-button variant="danger" size="small" @click="onDeleteEmployee(item)"> {{ $t('team-employee.list.deleteEmployee') }} </sw-button> </template> </sw-entity-listing> </template> <sw-confirm-modal ref="confirmDeleteModal" :title="$t('team-employee.list.deleteEmployee')" :text="employeeToDelete ? employeeToDelete.position : ''" @confirm="onConfirmDelete" @cancel="onCancelDelete"/> </sw-page>{% endraw %}`,{Component:i,Mixin:l}=Shopware,{Criteria:s}=Shopware.Data;i.register("team-plugin-employee-list",{template:o,mixins:[l.get("listing")],data(){return{employees:[],repository:null,isLoading:!1,employeeToDelete:null}},metaInfo(){return{title:this.$t("team-employee.general.mainMenuItemGeneral")}},computed:{columns(){return[{property:"position",label:this.$t("team-employee.list.columnPosition"),routerLink:"team.employee.detail",inlineEdit:"string",allowResize:!0,primary:!0}]}},created(){this.repository=this.repositoryFactory.create("team_employee"),this.getList()},methods:{getList(){this.isLoading=!0;const e=new s(this.page,this.limit);e.addAssociation("personImage"),this.repository.search(e,Shopware.Context.api).then(t=>{this.employees=t,this.total=t.total,this.isLoading=!1})},onDeleteEmployee(e){this.employeeToDelete=e,this.$refs.confirmDeleteModal.open()},onConfirmDelete(){this.employeeToDelete&&(this.isLoading=!0,this.repository.delete(this.employeeToDelete.id,Shopware.Context.api).then(()=>{this.getList()}).finally(()=>{this.isLoading=!1,this.employeeToDelete=null}))},onCancelDelete(){this.employeeToDelete=null}}});const n=`{% raw %}<sw-page> <template #smart-bar-header> <h2>{{ $t('team-employee.general.mainMenuItemGeneral') }} &raquo; {{ employee.position }}</h2> </template> <template #smart-bar-actions> <sw-button-process :isLoading="isLoading" :processSuccess="isSaveSuccessful" variant="primary" @process-finish="saveFinish" @click="onSave"> {{ $t('team-employee.detail.save') }} </sw-button-process> </template> <template #content> <sw-card-view> <sw-card :title="$t('team-employee.detail.general')"> <sw-field type="text" :label="$t('team-employee.detail.position')" v-model="employee.position"></sw-field> <sw-text-editor :label="$t('team-employee.detail.text')" v-model="employee.text"></sw-text-editor> </sw-card> <sw-card :title="$t('team-employee.detail.images')"> <sw-media-upload-v2 :uploadTag="employee.id" :source="employee.personImage" :label="$t('team-employee.detail.personImage')" @media-upload-remove-image="onRemovePersonImage" @media-upload-sidebar-open="onOpenPersonImage" @media-upload-successful="onPersonImageUpload" ></sw-media-upload-v2> <sw-media-upload-v2 :uploadTag="employee.id" :source="employee.backgroundImage" :label="$t('team-employee.detail.backgroundImage')" @media-upload-remove-image="onRemoveBackgroundImage" @media-upload-sidebar-open="onOpenBackgroundImage" @media-upload-successful="onBackgroundImageUpload" ></sw-media-upload-v2> </sw-card> </sw-card-view> </template> </sw-page>{% endraw %}`,{Component:m,Mixin:a}=Shopware,{Criteria:r}=Shopware.Data;m.register("team-plugin-employee-detail",{template:n,mixins:[a.get("notification"),a.get("placeholder")],data(){return{employee:null,isLoading:!1,isSaveSuccessful:!1,repository:null}},metaInfo(){return{title:this.$t("team-employee.general.mainMenuItemGeneral")}},created(){this.repository=this.repositoryFactory.create("team_employee"),this.getEmployee()},methods:{getEmployee(){this.isLoading=!0;const e=new r;e.addAssociation("personImage"),e.addAssociation("backgroundImage"),this.$route.params.id?this.repository.get(this.$route.params.id,Shopware.Context.api,e).then(t=>{this.employee=t,this.isLoading=!1}):this.repository.create(Shopware.Context.api).then(t=>{this.employee=t,this.isLoading=!1})},onSave(){this.isLoading=!0,this.repository.save(this.employee,Shopware.Context.api).then(()=>{this.getEmployee(),this.isSaveSuccessful=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("team-employee.detail.errorTitle"),message:e.message})})},saveFinish(){this.isSaveSuccessful=!1},onPersonImageUpload({targetId:e}){this.employee.personImageId=e},onRemovePersonImage(){this.employee.personImageId=null},onOpenPersonImage(){},onBackgroundImageUpload({targetId:e}){this.employee.backgroundImageId=e},onRemoveBackgroundImage(){this.employee.backgroundImageId=null},onOpenBackgroundImage(){}}});const p='{% block team_employee_media_form %} <sw-container> <sw-media-upload-v2 variant="regular" :uploadTag="mediaId" :source="mediaItem" :allowMultiSelect="false" :isLoading="isLoading" @media-upload="onImageUpload" @media-remove="onRemoveImage" ></sw-media-upload-v2> </sw-container> {% endblock %}',{Component:d}=Shopware,{Criteria:y}=Shopware.Data;d.register("team-employee-media-form",{template:p,props:{mediaId:{type:String,required:!1,default:null},mediaItem:{type:Object,required:!1,default:null}},data(){return{isLoading:!1,mediaRepository:null}},computed:{hasMedia(){return this.mediaItem!==null}},created(){this.mediaRepository=this.repositoryFactory.create("media")},methods:{onImageUpload({targetId:e}){this.isLoading=!0,this.mediaRepository.get(e,Shopware.Context.api).then(t=>{this.$emit("media-upload",t),this.isLoading=!1}).catch(()=>{this.isLoading=!1})},onRemoveImage(){this.$emit("media-remove")},onOpenMediaModal(){this.$emit("media-open")}}});const c={"team-employee":{general:{mainMenuItemGeneral:"Team Employees",description:"Manage team employees"},list:{createEmployee:"Create Employee",columnPosition:"Position",columnText:"Text",deleteEmployee:"Delete"},detail:{save:"Save",general:"General",position:"Position",text:"Text",errorTitle:"Error saving employee"}}},u={"team-employee":{general:{mainMenuItemGeneral:"Team Mitarbeiter",description:"Team Mitarbeiter verwalten"},list:{createEmployee:"Mitarbeiter erstellen",columnPosition:"Position",columnText:"Text",deleteEmployee:"LÃ¶schen"},detail:{save:"Speichern",general:"Allgemein",position:"Position",text:"Text",errorTitle:"Fehler beim Speichern des Mitarbeiters"}}},{Module:g}=Shopware;g.register("team-employee",{type:"plugin",name:"team-employee",title:"team-employee.general.mainMenuItemGeneral",description:"team-employee.general.description",color:"#ff3e6d",icon:"default-action-settings",snippets:{"en-GB":c,"de-DE":u},routes:{list:{component:"team-plugin-employee-list",path:"list"},detail:{component:"team-plugin-employee-detail",path:"detail/:id",meta:{parentPath:"team.employee.list"}},create:{component:"team-plugin-employee-detail",path:"create",meta:{parentPath:"team.employee.list"}}},navigation:[{label:"team-employee.general.mainMenuItemGeneral",color:"#ff3e6d",path:"team.employee.list",icon:"default-action-settings",position:100,parent:"sw-content"}]});
//# sourceMappingURL=team-plugin-B3P54PqF.js.map
